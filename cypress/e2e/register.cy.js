/// <reference types="Cypress" />

import { registerPage } from '../page_object/registerPage'
import { faker } from '@faker-js/faker'
import { should } from 'chai';



describe('Register page', () => {

    before(() => {
        cy.clearAllCookies()
        cy.clearAllLocalStorage()
        cy.clearAllSessionStorage()
    })

    beforeEach(() => {
        cy.visit('/register')
        cy.url().should('contains', '/register')
    })
})



it.only('Successful registration', () => {
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.type(faker.name.firstName())
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.type(faker.name.lastName())
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.type(faker.internet.Email())
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type(faker.internet.password())
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type(faker.internet.password())
    registerPage.checkbox.should('be.visible')
    registerPage.checkboxText.should('have.text', 'Accepted terms and conditions')
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
})

it('Register without first name', () => {
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.clear
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.type(faker.name.lastName())
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.type(faker.internet.email())
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.checkbox.click()
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
    registerPage.submitBtn.click()
})

it('Register without last name', () => {
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.type(faker.name.firstName())
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.clear
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.type(faker.internet.email())
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.checkbox.click()
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
    registerPage.submitBtn.click()
})

it('Register without email', () => {
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.type(faker.name.firstName())
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.type(faker.name.lastName())
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.clear
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.checkbox.click()
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
    registerPage.submitBtn.click()
})

it('Register with invalid password', () => {
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.type(faker.name.firstName())
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.type(faker.name.lastName())
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.clear
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type('test')
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type('test')
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.checkbox.click()
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
    registerPage.submitBtn.click()
    registerPage.alert.should('be.visible')
        .and('have.text', 'The password must be at least 8 characters.')
        .and('have.css', 'color', 'rgb(114,28,36)')

})


it('Register without checking terms and condition box', () => {
    cy.visit("/register")
    cy.url().should('contain', '/register')
    registerPage.RegisterText.should('have.text', 'Register')
        .and('have.css', 'text-transform', 'uppercase')
        .and('have.css', 'color', 'rgb(72, 73, 75)')
    registerPage.firstNameText.should('have.text', 'First Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.firstNameInputField.should('be.visible')
        .and('have.value', userFirstName)
    registerPage.firstNameInputField.type(faker.name.firstName())
    registerPage.lastNameText.should('have.text', 'Last Name')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.lastNameInputField.should('be.visible')
        .and('have.value', userLastName)
    registerPage.lastNameInputField.type(faker.name.lastName())
    registerPage.emailText.should('have.text', 'Email')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.emailInputField.should('be.visible')
        .and('have.value', userEmail)
    registerPage.emailInputField.should(faker.internet.email)
    registerPage.passwordText.should('have.text', 'Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.passwordInputField.should('be.visible')
        .and('have.value', userPassword)
    registerPage.passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.conf_passwordInputField.type(faker.internet.password)
    registerPage.conf_passwordText.should('have.text', 'Confirmed Password')
        .and('have.css', 'color', 'rgb(33,37,41)')
    registerPage.conf_passwordInputField.should('be.visible')
        .and('have.value', userConfirmedPassword)
    registerPage.checkbox.clear()
    registerPage.submittBtn.should('be.visible')
    registerPage.submittBtn.should('have.css', 'background-color', 'rgb(72,73,75)')
        .and('have.css', 'color', 'rgb(255,255,255)')
    registerPage.submitBtn.click()
})
